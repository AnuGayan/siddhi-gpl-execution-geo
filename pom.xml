<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2015 WSO2 Inc. (http://wso2.com)
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>siddhi-extensions</artifactId>
        <groupId>org.wso2.gpl.siddhi.extensions</groupId>
        <version>3.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>bundle</packaging>
    <url>http://wso2.org</url>

    <artifactId>siddhi-extension-gpl-geo</artifactId>
    <name>Siddhi Extension - Geo</name>

    <description>
        FunctionExecutors
        1.  GeoWithinFunctionExecutor
            Input : (longitude double, latitude double, geoJSONGeometryFence string)
                 OR (geoJSONGeometry string, geoJSONGeometryFence string)
            Output : true if (longitude, latitude) or geoJSONGeometry is within the geoJSONGeometryFence

        2.  GeoIntersectsFunctionExecutor
            Input : (longitude double, latitude double, geoJSONGeometryFence string)
                 OR (geoJSONGeometry string, geoJSONGeometryFence string)
            Output : true if (longitude, latitude) or geoJSONGeometry intersects the geoJSONGeometryFence

        3.  GeoWithinDistanceFunctionExecutor
            Input : (longitude double, latitude double, geoJSONGeometryFence string, distance double)
                 OR (geoJSONGeometry string, geoJSONGeometryFence string, distance double)
            Output : true if (longitude, latitude) or geoJSONGeometry is within distance of the geoJSONGeometryFence

        StreamProcessors
        1. GeoCrossesStreamProcessor
            Input : (id string, longitude double, latitude double, geoJSONGeometryFence string)
                 OR (id string, geoJSONGeometry string, geoJSONGeometryFence string)
            Output : an event with `crosses` additional attribute set to true when the object ((longitude, latitude) or geoJSONGeometry)
                     crosses into geoJSONGeometryFence and an event with `crosses` additional attribute set to false
                     when the object crosses out of the geoJSONGeometryFence

        2. GeoStationaryStreamProcessor
            Input : (id string, longitude double, latitude double, geoJSONGeometryFence string, radius double)
                 OR (id string, geoJSONGeometry string, geoJSONGeometryFence string, radius double)
            Output : when the object ((longitude, latitude) or geoJSONGeometry) starts being stationary within the radius
                     an event with `stationary` additional attribute set to true. When the object starts to move out of the radius
                     an event with `stationary` additional attribute set to false.

        3. GeoProximityStreamProcessor
            Input : (id string, longitude double, latitude double, geoJSONGeometryFence string, radius double)
                 OR (id string, geoJSONGeometry string, geoJSONGeometryFence string, radius double)
            Output : when two objects ((longitude, latitude) or geoJSONGeometry) starts being in close proximity within the radius
                     an event with `inCloseProximity` additional attribute set to true. When the object starts to move out of the radius
                     an event with `inCloseProximity` additional. attribute set to false. On each event, additional attributes
                     `proximityWith` gives the id of the object that this object is in close proximity and `proximityId` is an id unique to
                     the pair of objects

    </description>

    <dependencies>
        <dependency>
            <groupId>org.wso2.siddhi</groupId>
            <artifactId>siddhi-query-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.siddhi</groupId>
            <artifactId>siddhi-query-compiler</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.siddhi</groupId>
            <artifactId>siddhi-core</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wso2.orbit.org.geotools</groupId>
            <artifactId>gt-geojson</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>2.3.7</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Export-Package>
                            org.wso2.gpl.siddhi.extensions.geo.*
                        </Export-Package>
                        <Private-Package>
                            org.wso2.gpl.siddhi.extensions.geo.internal.*
                        </Private-Package>
                        <Import-Package>
                            *;resolution:=optional
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
